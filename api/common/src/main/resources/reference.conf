uk.co.baconi.oauth.api {

  # Server Configuration
  server {
    host: "0.0.0.0"
    host: ${?SERVER_HOST}
    port: 8080
    port: ${?SERVER_PORT}
    connectionIdleTimeoutSeconds: 45
    connectionIdleTimeoutSeconds: ${?SERVER_CONNECTION_IDLE_TIMEOUT_SECONDS}
  }

  # Endpoint Discovery
  locations {
    # all: "http://localhost:8080"
    assets: "http://localhost:8081"
    authentication: "http://localhost:8082"
    authorisation: "http://localhost:8083"
    session-info: "http://localhost:8084"
    token: "http://localhost:8085"
    token-introspection: "http://localhost:8086"
    token-revocation: "http://localhost:8087"
  }

  # Client Configuration Repository
  client.configuration {
    no-op: {
      type: "confidential",
    }
    consumer-x: {
      type: "confidential",
      allowedActions: ["introspect"],
    },
    consumer-y: {
      type: "public",
      redirectUris: [
        "uk.co.baconi.consumer-y://callback",
      ],
      allowedScopes: ["basic"],
      allowedActions: ["pkce"],
      allowedGrantTypes: ["authorization_code"],
    },
    consumer-z: {
      type: "confidential",
      redirectUris: [
        "http://consumer-z.baconi.co.uk/callback",
        "https://consumer-z.baconi.co.uk/callback",
      ]
      allowedScopes: ["basic"],
      allowedActions: ["authorise","introspect"],
      allowedGrantTypes: ["authorization_code", "password"],
    }
  }

  # Client Secret Repository
  client.secrets {
    # TODO - Make more secret when this isn't a proof of concept
    no-op: {
      "0edf4fa1-3816-4bb6-ac6e-63f219566d30": "$argon2id$v=19$m=16,t=2,p=1$YnJ3enRnR3pCd2JMNkJ1WA$T9xmBamcJKr9lbLbDgVa/Q" # MQgQKBW3*j1m4QyHWnMsp52sqADHq7j3
    }
    consumer-x: {
      "ab998101-5acb-4f9c-9a31-0136daa01ec7": "$argon2id$v=19$m=16,t=2,p=1$S3hET3R4WUhkc1hTYjl6dA$ZG1ww6bOXrwPOFUBiCLMnQ", # 9VylF3DbEeJbtdbih3lqpNXBw@Non#bi
    }
    consumer-z: {
      "424d9bc2-9068-4da7-981a-e9841d31b63d": "$argon2id$v=19$m=16,t=2,p=1$UzVUV3Ewa0ZxN256OXpZZQ$CqRIk1XTu4r4sfNxFfYt3Q", # 7XLlyzjRpvICEkNrsgtOuuj1S30Bj9Xu
      "956f05cc-4011-4d73-b7ae-d43d7cc5bd24": "$argon2id$v=19$m=16,t=2,p=1$MWU1Sk9qRUxhb0lFckVrcg$OIk99Mx7SRmKOXcGC4oGsw", # ez5A9SwYrSHF2Z4Cxvd&amp;g9zMI1i*EGyn
    }
  }

  # Database Configuration
  database {

    access-token {
      url: "jdbc:h2:mem:access_token;DB_CLOSE_DELAY=-1;"
      url: ${?DATABASE_ACCESS_TOKEN_URL}
      driver: "org.h2.Driver"
      driver: ${?DATABASE_ACCESS_TOKEN_DRIVER}
      user: ""
      user: ${?DATABASE_ACCESS_TOKEN_USER}
      password: ""
      password: ${?DATABASE_ACCESS_TOKEN_PASSWORD}
    }

    authorisation-code {
      url: "jdbc:h2:mem:authorisation_code;DB_CLOSE_DELAY=-1;"
      url: ${?DATABASE_AUTHORISATION_CODE_URL}
      driver: "org.h2.Driver"
      driver: ${?DATABASE_AUTHORISATION_CODE_DRIVER}
      user: ""
      user: ${?DATABASE_AUTHORISATION_CODE_USER}
      password: ""
      password: ${?DATABASE_AUTHORISATION_CODE_PASSWORD}
    }

    customer-credential {
      url: "jdbc:h2:mem:customer_credential;DB_CLOSE_DELAY=-1;"
      url: ${?DATABASE_CUSTOMER_CREDENTIAL_URL}
      driver: "org.h2.Driver"
      driver: ${?DATABASE_CUSTOMER_CREDENTIAL_DRIVER}
      user: ""
      user: ${?DATABASE_CUSTOMER_CREDENTIAL_USER}
      password: ""
      password: ${?DATABASE_CUSTOMER_CREDENTIAL_PASSWORD}
    }

    customer-status {
      url: "jdbc:h2:mem:customer_status;DB_CLOSE_DELAY=-1;"
      url: ${?DATABASE_CUSTOMER_STATUS_URL}
      driver: "org.h2.Driver"
      driver: ${?DATABASE_CUSTOMER_STATUS_DRIVER}
      user: ""
      user: ${?DATABASE_CUSTOMER_STATUS_USER}
      password: ""
      password: ${?DATABASE_CUSTOMER_STATUS_PASSWORD}
    }

    refresh-token {
      url: "jdbc:h2:mem:refresh_token;DB_CLOSE_DELAY=-1;"
      url: ${?DATABASE_REFRESH_TOKEN_URL}
      driver: "org.h2.Driver"
      driver: ${?DATABASE_REFRESH_TOKEN_DRIVER}
      user: ""
      user: ${?DATABASE_REFRESH_TOKEN_USER}
      password: ""
      password: ${?DATABASE_REFRESH_TOKEN_PASSWORD}
    }
  }
}