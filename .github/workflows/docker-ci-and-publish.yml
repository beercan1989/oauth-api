name: Docker CI and Push

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
    tags: [ 'v*.*.*' ]

jobs:

  pre-build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      
    strategy:
      matrix:
        target:
          - code-build
          - server-base
      
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          target: ${{ matrix.target }}
          cache-from: type=gha
          cache-to: type=gha,mode=max


  build:     
    runs-on: ubuntu-latest
    
    needs:
      - pre-build
    
    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        target:
          - server-full
          - server-assets
          - server-authentication
          - server-authorisation
          - server-session-info
          - server-token
          - server-token-introspection
          - server-token-revocation
          - server-user-info
          - server-well-known

    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}/${{ matrix.target }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v2

      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          target: ${{ matrix.target }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
